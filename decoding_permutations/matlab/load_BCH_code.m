% load the BCH code as obtained from Sage after running it through
% Codeword()._word
function [Clist d] = load_BCH_code(s)
switch s
    case {'DIM_2', 'DPM_2'}
        d     = 4;
        Clist = [   0 0 0 0 0 0 0; ...
                    1 0 1 1 1 0 0; ...
                    0 1 0 1 1 1 0; ...
                    1 1 1 0 0 1 0; ...
                    0 0 1 0 1 1 1; ...
                    1 0 0 1 0 1 1; ...
                    0 1 1 1 0 0 1; ...
                    1 1 0 0 1 0 1; ];
    case 'DIM_4'
        d     = 4;
        Clist = [   0 0 0 0 0 0 0; ...
                    2 0 2 2 2 0 0; ...
                    3 0 3 3 3 0 0; ...
                    1 0 1 1 1 0 0; ...
                    0 2 0 2 2 2 0; ...
                    2 2 2 0 0 2 0; ...
                    3 2 3 1 1 2 0; ...
                    1 2 1 3 3 2 0; ...
                    0 3 0 3 3 3 0; ...
                    2 3 2 1 1 3 0; ...
                    3 3 3 0 0 3 0; ...
                    1 3 1 2 2 3 0; ...
                    0 1 0 1 1 1 0; ...
                    2 1 2 3 3 1 0; ...
                    3 1 3 2 2 1 0; ...
                    1 1 1 0 0 1 0; ...
                    0 0 2 0 2 2 2; ...
                    2 0 0 2 0 2 2; ...
                    3 0 1 3 1 2 2; ...
                    1 0 3 1 3 2 2; ...
                    0 2 2 2 0 0 2; ...
                    2 2 0 0 2 0 2; ...
                    3 2 1 1 3 0 2; ...
                    1 2 3 3 1 0 2; ...
                    0 3 2 3 1 1 2; ...
                    2 3 0 1 3 1 2; ...
                    3 3 1 0 2 1 2; ...
                    1 3 3 2 0 1 2; ...
                    0 1 2 1 3 3 2; ...
                    2 1 0 3 1 3 2; ...
                    3 1 1 2 0 3 2; ...
                    1 1 3 0 2 3 2; ...
                    0 0 3 0 3 3 3; ...
                    2 0 1 2 1 3 3; ...
                    3 0 0 3 0 3 3; ...
                    1 0 2 1 2 3 3; ...
                    0 2 3 2 1 1 3; ...
                    2 2 1 0 3 1 3; ...
                    3 2 0 1 2 1 3; ...
                    1 2 2 3 0 1 3; ...
                    0 3 3 3 0 0 3; ...
                    2 3 1 1 2 0 3; ...
                    3 3 0 0 3 0 3; ...
                    1 3 2 2 1 0 3; ...
                    0 1 3 1 2 2 3; ...
                    2 1 1 3 0 2 3; ...
                    3 1 0 2 1 2 3; ...
                    1 1 2 0 3 2 3; ...
                    0 0 1 0 1 1 1; ...
                    2 0 3 2 3 1 1; ...
                    3 0 2 3 2 1 1; ...
                    1 0 0 1 0 1 1; ...
                    0 2 1 2 3 3 1; ...
                    2 2 3 0 1 3 1; ...
                    3 2 2 1 0 3 1; ...
                    1 2 0 3 2 3 1; ...
                    0 3 1 3 2 2 1; ...
                    2 3 3 1 0 2 1; ...
                    3 3 2 0 1 2 1; ...
                    1 3 0 2 3 2 1; ...
                    0 1 1 1 0 0 1; ...
                    2 1 3 3 2 0 1; ...
                    3 1 2 2 3 0 1; ...
                    1 1 0 0 1 0 1; ];
    case 'DPM_3'
        d     = 5;
        Clist = [   0 0 0 0 0 0 0 0; ...
                    1 0 2 1 1 1 0 0; ...
                    2 0 1 2 2 2 0 0; ...
                    0 1 0 2 1 1 1 0; ...
                    1 1 2 0 2 2 1 0; ...
                    2 1 1 1 0 0 1 0; ...
                    0 2 0 1 2 2 2 0; ...
                    1 2 2 2 0 0 2 0; ...
                    2 2 1 0 1 1 2 0; ...
                    0 0 1 0 2 1 1 1; ...
                    1 0 0 1 0 2 1 1; ...
                    2 0 2 2 1 0 1 1; ...
                    0 1 1 2 0 2 2 1; ...
                    1 1 0 0 1 0 2 1; ...
                    2 1 2 1 2 1 2 1; ...
                    0 2 1 1 1 0 0 1; ...
                    1 2 0 2 2 1 0 1; ...
                    2 2 2 0 0 2 0 1; ...
                    0 0 2 0 1 2 2 2; ...
                    1 0 1 1 2 0 2 2; ...
                    2 0 0 2 0 1 2 2; ...
                    0 1 2 2 2 0 0 2; ...
                    1 1 1 0 0 1 0 2; ...
                    2 1 0 1 1 2 0 2; ...
                    0 2 2 1 0 1 1 2; ...
                    1 2 1 2 1 2 1 2; ...
                    2 2 0 0 2 0 1 2; ];
end
